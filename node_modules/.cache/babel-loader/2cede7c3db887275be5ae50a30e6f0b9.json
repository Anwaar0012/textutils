{"ast":null,"code":"var _jsxFileName = \"F:\\\\reactjs\\\\textutils\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// import logo from './logo.svg';me\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\"; // import {Switch,Route} from 'react-router-dom';\n\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport { BrowserRouter } from \"react-router-dom\"; // import{\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from 'react-router-dom';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //dark mode is enabled or not\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAllert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      document.title = \"TextUtils- Dark Mode\"; // setInterval(() => {\n      //   document.title = \"TextUtils- Dark Mode\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install TextUtils Now\";\n      // }, 1500);\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.title = \"TextUtils- Light Mode\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Textutil\",\n      aboutText: \"About Textutils\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"ZI4CJvDB/5AqSfC56M12vAUheEc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Alert","About","Navbar","TextForm","BrowserRouter","App","mode","setMode","alert","setAlert","showAllert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title"],"sources":["F:/reactjs/textutils/src/App.js"],"sourcesContent":["// import logo from './logo.svg';me\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\n// import {Switch,Route} from 'react-router-dom';\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport { BrowserRouter } from \"react-router-dom\";\n// import{\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from 'react-router-dom';\n\nfunction App() {\n  //dark mode is enabled or not\n  const [mode, setMode]=useState('light');\n  const [alert,setAlert]=useState(null);\n  const showAllert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n\n  }\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');      \n      document.body.style.backgroundColor='#042743';\n      document.title = \"TextUtils- Dark Mode\";\n      // setInterval(() => {\n      //   document.title = \"TextUtils- Dark Mode\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install TextUtils Now\";\n      // }, 1500);\n      \n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      document.title = \"TextUtils- Light Mode\";\n      \n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"Textutil\" aboutText=\"About Textutils\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert} />\n      <div className=\"container my-3\" >\n        {/* <Switch>\n          <Route  exact path=\"/about\">\n            <About mode={mode}/>\n          </Route>\n          <Route exact path=\"/\">\n          <TextForm showAllert={showAllert} heading=\"Enter the heading to analyze below.\" mode={mode}/>\n          </Route>\n        </Switch> */}\n        {/* Before using router */}\n        {/* <TextForm showAllert={showAllert} heading=\"Enter the heading to analyze below.\" mode={mode}/> */}\n        {/* <About/> */}\n      </div>\n     {/* </Router>       */}\n    </>\n    \n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B,C,CACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAgBR,QAAQ,CAAC,OAAD,CAA9B;EACA,MAAM,CAACS,KAAD,EAAOC,QAAP,IAAiBV,QAAQ,CAAC,IAAD,CAA/B;;EACA,MAAMW,UAAU,GAAC,CAACC,OAAD,EAASC,IAAT,KAAgB;IAC/BH,QAAQ,CAAC;MACPI,GAAG,EAACF,OADG;MAEPC,IAAI,EAACA;IAFE,CAAD,CAAR;IAIAE,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,IAAD,CAAR;IACD,CAFS,EAEP,IAFO,CAAV;EAID,CATD;;EAUA,MAAMM,UAAU,GAAG,MAAI;IACrB,IAAGT,IAAI,KAAK,OAAZ,EAAoB;MAClBC,OAAO,CAAC,MAAD,CAAP;MACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAoC,SAApC;MACAH,QAAQ,CAACI,KAAT,GAAiB,sBAAjB,CAHkB,CAIlB;MACA;MACA;MACA;MACA;MACA;IAED,CAXD,MAYI;MACFb,OAAO,CAAC,OAAD,CAAP;MACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAoC,OAApC;MACAH,QAAQ,CAACI,KAAT,GAAiB,uBAAjB;IAED;EACF,CAnBD;;EAoBA,oBACE;IAAA,wBAEE,QAAC,MAAD;MAAQ,KAAK,EAAC,UAAd;MAAyB,SAAS,EAAC,iBAAnC;MAAqD,IAAI,EAAEd,IAA3D;MAAiE,UAAU,EAAES;IAA7E;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,KAAD;MAAO,KAAK,EAAEP;IAAd;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAK,SAAS,EAAC;IAAf;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA,gBADF;AAsBD;;GAxDQH,G;;KAAAA,G;AA0DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}