{"ast":null,"code":"var _jsxFileName = \"F:\\\\reactjs\\\\textutils\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// import logo from './logo.svg';me\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\"; // import {Switch,Route} from 'react-router-dom';\n\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //dark mode is enabled or not\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAllert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      document.title = \"TextUtils- Dark Mode\"; // setInterval(() => {\n      //   document.title = \"TextUtils- Dark Mode\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install TextUtils Now\";\n      // }, 1500);\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.title = \"TextUtils- Light Mode\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"Textutil\",\n        aboutText: \"About Textutils\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(TextForm, {\n              showAllert: showAllert,\n              heading: \"Enter the heading to analyze below.\",\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"ZI4CJvDB/5AqSfC56M12vAUheEc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Alert","About","Navbar","TextForm","BrowserRouter","Router","Switch","Route","Link","App","mode","setMode","alert","setAlert","showAllert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title"],"sources":["F:/reactjs/textutils/src/App.js"],"sourcesContent":["// import logo from './logo.svg';me\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\n// import {Switch,Route} from 'react-router-dom';\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport{\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\n\nfunction App() {\n  //dark mode is enabled or not\n  const [mode, setMode]=useState('light');\n  const [alert,setAlert]=useState(null);\n  const showAllert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n\n  }\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');      \n      document.body.style.backgroundColor='#042743';\n      document.title = \"TextUtils- Dark Mode\";\n      // setInterval(() => {\n      //   document.title = \"TextUtils- Dark Mode\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install TextUtils Now\";\n      // }, 1500);\n      \n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      document.title = \"TextUtils- Light Mode\";\n      \n    }\n  }\n  return (\n    <>\n      <Router>\n      <Navbar title=\"Textutil\" aboutText=\"About Textutils\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert} />\n      <div className=\"container my-3\" >\n        <Switch>\n          <Route  exact path=\"/about\">\n            <About/>\n          </Route>\n          <Route exact path=\"/\">\n          <TextForm showAllert={showAllert} heading=\"Enter the heading to analyze below.\" mode={mode}/>\n          </Route>\n        </Switch>\n        {/* Before using router */}\n        {/* <TextForm showAllert={showAllert} heading=\"Enter the heading to analyze below.\" mode={mode}/> */}\n        {/* <About/> */}\n      </div>\n      </Router>\n      \n    </>\n    \n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SACEA,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,QAKO,kBALP;;;;AAOA,SAASC,GAAT,GAAe;EAAA;;EACb;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAgBZ,QAAQ,CAAC,OAAD,CAA9B;EACA,MAAM,CAACa,KAAD,EAAOC,QAAP,IAAiBd,QAAQ,CAAC,IAAD,CAA/B;;EACA,MAAMe,UAAU,GAAC,CAACC,OAAD,EAASC,IAAT,KAAgB;IAC/BH,QAAQ,CAAC;MACPI,GAAG,EAACF,OADG;MAEPC,IAAI,EAACA;IAFE,CAAD,CAAR;IAIAE,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,IAAD,CAAR;IACD,CAFS,EAEP,IAFO,CAAV;EAID,CATD;;EAUA,MAAMM,UAAU,GAAG,MAAI;IACrB,IAAGT,IAAI,KAAK,OAAZ,EAAoB;MAClBC,OAAO,CAAC,MAAD,CAAP;MACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAoC,SAApC;MACAH,QAAQ,CAACI,KAAT,GAAiB,sBAAjB,CAHkB,CAIlB;MACA;MACA;MACA;MACA;MACA;IAED,CAXD,MAYI;MACFb,OAAO,CAAC,OAAD,CAAP;MACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAoC,OAApC;MACAH,QAAQ,CAACI,KAAT,GAAiB,uBAAjB;IAED;EACF,CAnBD;;EAoBA,oBACE;IAAA,uBACE,QAAC,MAAD;MAAA,wBACA,QAAC,MAAD;QAAQ,KAAK,EAAC,UAAd;QAAyB,SAAS,EAAC,iBAAnC;QAAqD,IAAI,EAAEd,IAA3D;QAAiE,UAAU,EAAES;MAA7E;QAAA;QAAA;QAAA;MAAA,QADA,eAEA,QAAC,KAAD;QAAO,KAAK,EAAEP;MAAd;QAAA;QAAA;QAAA;MAAA,QAFA,eAGA;QAAK,SAAS,EAAC,gBAAf;QAAA,uBACE,QAAC,MAAD;UAAA,wBACE,QAAC,KAAD;YAAQ,KAAK,MAAb;YAAc,IAAI,EAAC,QAAnB;YAAA,uBACE,QAAC,KAAD;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADF,eAIE,QAAC,KAAD;YAAO,KAAK,MAAZ;YAAa,IAAI,EAAC,GAAlB;YAAA,uBACA,QAAC,QAAD;cAAU,UAAU,EAAEE,UAAtB;cAAkC,OAAO,EAAC,qCAA1C;cAAgF,IAAI,EAAEJ;YAAtF;cAAA;cAAA;cAAA;YAAA;UADA;YAAA;YAAA;YAAA;UAAA,QAJF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAHA;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAuBD;;GAzDQD,G;;KAAAA,G;AA2DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}