{"ast":null,"code":"var _jsxFileName = \"F:\\\\reactjs\\\\textutils\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// import logo from './logo.svg';me\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\"; // import About from \"./components/About\";\n\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //dark mode is enabled or not\n  const [mode, setMode] = useState('light');\n  useState[(alert, setAlert)] = useState(null);\n\n  const showAllert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n  };\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      setAlert('Dark mode has been enabled', 'success');\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      setAlert('Light mode has been enabled', 'success');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Textutil\",\n      aboutText: \"About Textutils\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: \"This is a an alert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Enter the heading to analyze below.\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"ev3KLmspS5khJTwU1lj29sMv03o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Alert","Navbar","TextForm","App","mode","setMode","alert","setAlert","showAllert","message","type","msg","toggleMode","document","body","style","backgroundColor"],"sources":["F:/reactjs/textutils/src/App.js"],"sourcesContent":["// import logo from './logo.svg';me\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n\nfunction App() {\n  //dark mode is enabled or not\n  const [mode, setMode]=useState('light');\n  useState[alert,setAlert]=useState(null);\n  const showAllert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n\n  }\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor='#042743';\n      setAlert('Dark mode has been enabled','success');\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      setAlert('Light mode has been enabled','success');\n    }\n  }\n  return (\n    <>\n      \n      <Navbar title=\"Textutil\" aboutText=\"About Textutils\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert=\"This is a an alert\" />\n      <div className=\"container my-3\" >\n        <TextForm  heading=\"Enter the heading to analyze below.\" mode={mode}/>\n        {/* <About/> */}\n      </div>\n      \n    </>\n    \n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAgBN,QAAQ,CAAC,OAAD,CAA9B;EACAA,QAAQ,EAACO,KAAK,EAACC,QAAP,EAAR,GAAyBR,QAAQ,CAAC,IAAD,CAAjC;;EACA,MAAMS,UAAU,GAAC,CAACC,OAAD,EAASC,IAAT,KAAgB;IAC/BH,QAAQ,CAAC;MACPI,GAAG,EAACF,OADG;MAEPC,IAAI,EAACA;IAFE,CAAD,CAAR;EAKD,CAND;;EAOA,MAAME,UAAU,GAAG,MAAI;IACrB,IAAGR,IAAI,KAAK,OAAZ,EAAoB;MAClBC,OAAO,CAAC,MAAD,CAAP;MACAQ,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAoC,SAApC;MACAT,QAAQ,CAAC,4BAAD,EAA8B,SAA9B,CAAR;IACD,CAJD,MAKI;MACFF,OAAO,CAAC,OAAD,CAAP;MACAQ,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAoC,OAApC;MACAT,QAAQ,CAAC,6BAAD,EAA+B,SAA/B,CAAR;IACD;EACF,CAXD;;EAYA,oBACE;IAAA,wBAEE,QAAC,MAAD;MAAQ,KAAK,EAAC,UAAd;MAAyB,SAAS,EAAC,iBAAnC;MAAqD,IAAI,EAAEH,IAA3D;MAAiE,UAAU,EAAEQ;IAA7E;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,KAAD;MAAO,KAAK,EAAC;IAAb;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAK,SAAS,EAAC,gBAAf;MAAA,uBACE,QAAC,QAAD;QAAW,OAAO,EAAC,qCAAnB;QAAyD,IAAI,EAAER;MAA/D;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA,gBADF;AAaD;;GApCQD,G;;KAAAA,G;AAsCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}